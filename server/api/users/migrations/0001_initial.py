# Generated by Django 4.2.2 on 2023-06-30 07:53

import api.users.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False, help_text="User has every permission without assigning them.", verbose_name="superuser status"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(default=False, help_text="Designates if user can log into this admin site.", verbose_name="staff status"),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates if user should be treated as active. Unselect instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                ("date_joined", models.DateTimeField(default=django.utils.timezone.now, verbose_name="date joined")),
                ("user_id", models.AutoField(primary_key=True, serialize=False)),
                ("username", models.CharField(max_length=20, unique=True)),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254, null=True, unique=True)),
                ("team_signup", models.BooleanField(default=False)),
                ("has_consent", models.BooleanField(default=False)),
                ("travel_method", models.CharField(max_length=100)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups user belongs to. User gets all permissions granted to groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", api.users.models.UserManager()),
            ],
        ),
    ]
